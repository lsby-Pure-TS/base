export declare type Function<A, R> = (a: A) => R;
export declare type Function1<A, R> = (a: A) => R;
export declare type Function2<A, B, R> = Function<A, Function<B, R>>;
export declare type Function3<A, B, C, R> = Function<A, Function<B, Function<C, R>>>;
export declare type Function4<A, B, C, D, R> = Function<A, Function<B, Function<C, Function<D, R>>>>;
export declare type Function5<A, B, C, D, E, R> = Function<A, Function<B, Function<C, Function<D, Function<E, R>>>>>;
export declare type Function6<A, B, C, D, E, F, R> = Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, R>>>>>>;
export declare type Function7<A, B, C, D, E, F, G, R> = Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, R>>>>>>>;
export declare type Function8<A, B, C, D, E, F, G, H, R> = Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, R>>>>>>>>;
export declare type Function9<A, B, C, D, E, F, G, H, I, R> = Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, R>>>>>>>>>;
